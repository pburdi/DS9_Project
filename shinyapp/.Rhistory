find.packages("devtools")
install.packages("devtools")
find.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
library(KernSmooth)
q()
q()
pwd
getpw
getpwd()
?
d
cd
pwd
dir
dir
getpwd()
demo()
colors
hclcolors
ls
ls -las
pwd
q()
args(paste)
args(paste)
save.image("C:\\Users\\PMB\\Documents\\Rconsole")
save.image("C:\\Users\\PMB\\Documents\\Rconsole")
args(paste)
q()
setwd("C:/Users/PMB/Google Drive/data")
makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
m
x
ls()
cachemean(4)
makevector(723)
set
get
get(4)
get(4)
mean
mean(457453434344)
mean(457453434344)
makeVector
makeVector(14)
source('C:/Users/PMB/Google Drive/data/pollutantmean.R')
makeVector(
)
makeVector(c(1,2,3,4))
a <- makeVector(c(1,2,3,4))
a
a$get()
cachemean(a)
a$getmean()
release(a)
a <- null
a <- NULL
pre_sacr <- makeVector(c(10,20,30,40))
spirt <- cachemean(pre_sacr)
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
dat = matrix(c(0, 0, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 1, 2, 3, 4, 5, 6), ncol=4)
colnames(dat)=c("m1","m2","m3","m4")
dat
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
x
amatrix$getinverse()
a<-makeCacheMatrix
a$get()
a$getinverse()
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
a$getinverse()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$getinverse()
amatrix$get()
getinverse
amatrix$solve()
solve
solve()
amatrix$solve()
amatrix$inv()
amatrix$clas()
amatrix$class()
amatrix$get()
b <- amatrix$get()
solve(b)
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix$get()
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix$get()
amatrix$class()
?solve
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix$get()
cachSolve(amatrix)
cacheSolve(amatrix)
source('C:/Users/PMB/Google Drive/data/makevecmatrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
source('C:/Users/PMB/Google Drive/data/ProgrammingAssignment2-master/ProgrammingAssignment2/cachematrix.R')
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix$get()
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
source('C:/Users/PMB/Google Drive/data/ProgrammingAssignment2-master/ProgrammingAssignment2/cachematrix.R')
cacheSolve(amatrix)
install.packages("swirl")
install.packages("swirl")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
(32+5)/36
1 - 4/36
1 - 3/36
deck
52
4/52
0
12/52
3/51
2/50
2/51
.5*1.6
(1.6*.5)/2
(1.6*.8)/2
1-.64
.64/(.5*2)
mypdf
mypdf(.64)
integrate(mypdf,0,1.6)
1-.50*.50/4
x^2=4*.5
1^2=4*.5
skip
info()
skip()
skip()
skip()
runif(10)
?runif
runif(100)
runif(1000)
hist(runif(1000))
mns = NULL
for (i in 1 : 1000) mns = c(mns, mean(runif(40)))
hist(mns)
runif(10000)
runif(10000, 0, 1)
load("C:/Users/PMB/Dropbox/data/class8project1/.RData")
modelFit <- train(classe ~., data=subtesting, method="rf", prox=TRUE)
library(caret); library(kernlab); library(dplyr); library(psych); library(AppliedPredictiveModeling)
set.seed(1111)
transparentTheme(trans = .4)
modelFit <- train(classe ~., data=subtesting, method="rf", prox=TRUE)
modelFit$finalModel
oracle <- predict(modelFit, subtesting)
table(oracle, subtesting$classe)
testing<- testing[,8:160]
testing<- testing[,c(1:4, 11:15, 30:41, 53:60, 68:73, 77:79, 86:91, 106:117, 124:129, 144:153)]
testing<- testing[,c(1:4, 13:15, 19:21, 36:38, 48:50, 54:56, 66:68)]
testing[(testing== "#DIV/0!")] = NA
testing<- na.omit(testing)
oracle2 <- predict(modelFit, newdata=testing)
table(oracle, testing$classe)
oracle2 <- predict(modelFit, newdata=subtesting)
table(oracle, testing$classe)
oracle2
oracle2 <- predict(modelFit, newdata=testing)
table(oracle2, testing$classe)
oracle2 <- predict(modelFit, newdata=testing)
table(oracle2, subtesting$classe)
oracle2 <- predict(modelFit, newdata=testing)
table(oracle, testing$classe)
table(oracle2, testing$classe)
table(oracle2, subtesting$classe)
featurePlot(x=testing[,c("roll_belt", "roll_arm","roll_dumbbell","roll_forearm")],
y=oracle2,
plot="pairs", auto.key = list(columns = 5))
install.packages("shiny")
library(shiny)
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
states <- readRDS("countries_mod.rds")
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
states <- readRDS("counties_mod.rds")
counties[grep("california", counties$name), ]
counties[grep("california", states$name), ]
states[grep("california", states$name), ]
states[grep("california", states$name), 2]
states[grep("california", states$name), 3]
pop_10_14 <- read.table("pop10_14.csv", sep = ",", header = TRUE)
nics_check <- read.table("NICS_Firearm_Checks_-_Month_Year_by_State.csv", sep = ",", header = TRUE)
nics_master <- data.frame(matrix(ncol = 7, nrow = 0))
nics_2010 <-nics_check[288:342, c(1,14)]
colnames(nics_2010)[c(1)] <- "State"
colnames(nics_2010)[c(2)] <- "Registration"
nics_2011 <-nics_check[231:285, c(1,14)]
colnames(nics_2011)[c(1)] <- "State"
colnames(nics_2011)[c(2)] <- "Registration"
nics_2012 <-nics_check[174:228, c(1,14)]
colnames(nics_2012)[c(1)] <- "State"
colnames(nics_2012)[c(2)] <- "Registration"
nics_2013 <-nics_check[117:171, c(1,14)]
colnames(nics_2013)[c(1)] <- "State"
colnames(nics_2013)[c(2)] <- "Registration"
nics_2014 <- nics_check[60:114, c(1,14)]
colnames(nics_2014)[c(1)] <- "State"
colnames(nics_2014)[c(2)] <- "Registration"
pop_10_14$POPESTIMATE2010 <- sapply(pop_10_14$POPESTIMATE2010, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
nics_2010$Registration <- sapply(nics_2010$Registration, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
nics_2011$Registration <- sapply(nics_2011$Registration, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
nics_2012$Registration <- sapply(nics_2012$Registration, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
nics_2013$Registration <- sapply(nics_2013$Registration, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
nics_2014$Registration <- sapply(nics_2014$Registration, function(v) {as.numeric(gsub("\\,","", as.character(v)))})
pop_10_14[,7] <- as.numeric(pop_10_14[,7])
pop_10_14[,5] <- as.character(pop_10_14[,5])
nics_2010[,2] <- as.numeric(nics_2010[,2])
nics_2010[,1] <- as.character(nics_2010[,1])
nics_2011[,2] <- as.numeric(nics_2011[,2])
nics_2011[,1] <- as.character(nics_2011[,1])
nics_2012[,2] <- as.numeric(nics_2012[,2])
nics_2012[,1] <- as.character(nics_2012[,1])
nics_2013[,2] <- as.numeric(nics_2013[,2])
nics_2013[,1] <- as.character(nics_2013[,1])
nics_2014[,2] <- as.numeric(nics_2014[,2])
nics_2014[,1] <- as.character(nics_2014[,1])
for (w in 1:nrow(pop_10_14)){
for (x in 1:nrow(nics_2010)){
if (pop_10_14[w,5] == nics_2010[x,1]){
nics_master[x,1] <- nics_2010[x,1]
nics_master[x,2] <- nics_2010[x,2]
nics_master[x,3] <- round(100*(nics_2010[x,2]/pop_10_14[w,7]), digits = 1)
}
}
for (x in 1:nrow(nics_2011)){
if (pop_10_14[w,5] == nics_2011[x,1]){
nics_master[x,4] <- round(100*(nics_2011[x,2]/pop_10_14[w,8]), digits = 1)
}
}
for (x in 1:nrow(nics_2012)){
if (pop_10_14[w,5] == nics_2012[x,1]){
nics_master[x,5] <- round(100*(nics_2012[x,2]/pop_10_14[w,9]), digits = 1)
}
}
for (x in 1:nrow(nics_2013)){
if (pop_10_14[w,5] == nics_2013[x,1]){
nics_master[x,6] <- round(100*(nics_2013[x,2]/pop_10_14[w,10]), digits = 1)
}
}
for (x in 1:nrow(nics_2014)){
if (pop_10_14[w,5] == nics_2014[x,1]){
nics_master[x,7] <- round(100*(nics_2014[x,2]/pop_10_14[w,11]), digits = 1)
}
}
}
colnames(nics_master)[c(1)] <- "name"
colnames(nics_master)[c(2)] <- "total.pop"
colnames(nics_master)[c(3)] <- "P2010"
colnames(nics_master)[c(4)] <- "P2011"
colnames(nics_master)[c(5)] <- "P2012"
colnames(nics_master)[c(6)] <- "P2013"
colnames(nics_master)[c(7)] <- "P2014"
row.has.na <- apply(nics_master, 1, function(x){any(is.na(x))})
nics_master <- nics_master[!row.has.na,]
nics_master[grep("California", nics_master$name), ]
states[grep("california", states$name), ]
states[grep("california", states$name), ]
states <- readRDS("counties_mod.rds")
states[grep("california", states$name), ]
states[grep("california", states$name), 3] <- 2.4
states[grep("california", states$name), ]
states[grep("california", states$name), 3] <- 2.2
states[grep("california", states$name), 4] <- 2.2
states[grep("california", states$name), 4] <- 2.4
states[grep("california", states$name), 5] <- 3
states[grep("california", states$name), 6] <- 3.6
states[grep("california", states$name), ]
states[grep("california", states$name), 7] <- 3.8
states[grep("california", states$name), 8] <- 85
states[grep("california", states$name), ]
olnames(states)[c(3)] <- "P2010"
colnames(states)[c(3)] <- "P2010"
colnames(states)[c(4)] <- "P2011"
colnames(states)[c(5)] <- "P2012"
colnames(states)[c(6)] <- "P2013"
colnames(states)[c(7)] <- "P2014"
colnames(states)[c(8)] <- "REM"
states[grep("california", states$name), ]
saveRDS(states, file="counties_mod.Rds")
setwd("C:/Users/PMB/Dropbox/data/class9project1")
shiny::runApp()
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
counties[grep("california", counties$name), ]
states[grep("california", states$name), ]
states[grep("california", states$name), 2] <- 0
states[grep("california", states$name), ]
saveRDS(states, file="counties_mod.Rds")
setwd("C:/Users/PMB/Dropbox/data/class9project1")
shiny::runApp()
shiny::runApp()
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
states <- readRDS("counties.rds")
states[grep("california", states$name), ]
states[grep("california", states$name), 3] <- 3
states[grep("california", states$name), 4] <- 3.6
states[grep("california", states$name), 5] <- 3.8
states[grep("california", states$name), 6] <- 89.6
states[grep("california", states$name), ]
colnames(states)[c(3)] <- "P2012"
colnames(states)[c(4)] <- "P2013"
colnames(states)[c(5)] <- "P2014"
colnames(states)[c(6)] <- "P3"
saveRDS(states, file="counties_mod.Rds")
setwd("C:/Users/PMB/Dropbox/data/class9project1")
shiny::runApp()
head(nics_master)
tolower(nics_master)
tolower(nics_master$name)
nics_master$name <- tolower(nics_master$name)
head(nics_master)
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
rm(states)
cschema <- readRDS("countries.rds"
)
cschema <- readRDS("counties.rds")
cschema[,2] <- 0
cschema
cschema[grep(nics_master[1,]),])
cschema[grep(nics_master[1,1]),])
cschema[grep(nics_master[1,1]), cschema$name], 1)
nics_master[1,1]
cschema[grep(nics_master[1,1], cschema$name), 1]
cschema[grep(nics_master[1,1]), cschema$name], 3)
cschema[grep(nics_master[1,1], cschema$name), 3]
head(nics_master)
for (w in 1:nrow(nics_master)){
if (cschema[grep(nics_master[w,1], cschema$name), 1]){
cschema[grep(nics_master[w,1], cschema$name), 3] <- nics_master[w,5]
cschema[grep(nics_master[w,1], cschema$name), 4] <- nics_master[w,6]
cschema[grep(nics_master[w,1], cschema$name), 5] <- nics_master[w,7]
cschema[grep(nics_master[w,1], cschema$name), 6] <- 100 - (nics_master[w,5] + nics_master[w,6] + nics_master[w,7])
}
}
for (w in 1:nrow(nics_master)){
cschema[grep(nics_master[w,1], cschema$name), 3] <- nics_master[w,5]
cschema[grep(nics_master[w,1], cschema$name), 4] <- nics_master[w,6]
cschema[grep(nics_master[w,1], cschema$name), 5] <- nics_master[w,7]
cschema[grep(nics_master[w,1], cschema$name), 6] <- 100 - (nics_master[w,5] + nics_master[w,6] + nics_master[w,7])
}
}
for (w in 1:nrow(nics_master)){
cschema[grep(nics_master[w,1], cschema$name), 3] <- nics_master[w,5]
cschema[grep(nics_master[w,1], cschema$name), 4] <- nics_master[w,6]
cschema[grep(nics_master[w,1], cschema$name), 5] <- nics_master[w,7]
cschema[grep(nics_master[w,1], cschema$name), 6] <- 100 - (nics_master[w,5] + nics_master[w,6] + nics_master[w,7])
}
tail(cschema)
rm cshema
rm(cschema)
cschema <- readRDS("countries.rds")
colnames(cschema)[c(2)] <- "NOTUSED"
colnames(cschema)[c(3)] <- "P2012"
colnames(cschema)[c(4)] <- "P2013"
colnames(cschema)[c(5)] <- "P2014"
colnames(cschema)[c(6)] <- "P3"
cschema[,2] <- 0
cschema <- readRDS("countries.rds")
PWD
setwd("C:/Users/PMB/Dropbox/data/class9project1/data")
cschema <- readRDS("countries.rds")
schema <- readRDS("counties.rds")
colnames(cschema)[c(2)] <- "NOTUSED"
colnames(cschema)[c(3)] <- "P2012"
colnames(cschema)[c(4)] <- "P2013"
colnames(cschema)[c(5)] <- "P2014"
colnames(cschema)[c(6)] <- "P3"
cschema[,2] <- 0
cschema <- readRDS("counties.rds")
colnames(cschema)[c(2)] <- "NOTUSED"
colnames(cschema)[c(3)] <- "P2012"
colnames(cschema)[c(4)] <- "P2013"
colnames(cschema)[c(5)] <- "P2014"
colnames(cschema)[c(6)] <- "P3"
cschema[,2] <- 0
for (w in 1:nrow(nics_master)){
cschema[grep(nics_master[w,1], cschema$name), 3] <- nics_master[w,5]
cschema[grep(nics_master[w,1], cschema$name), 4] <- nics_master[w,6]
cschema[grep(nics_master[w,1], cschema$name), 5] <- nics_master[w,7]
cschema[grep(nics_master[w,1], cschema$name), 6] <- 100 - (nics_master[w,5] + nics_master[w,6] + nics_master[w,7])
print cschema[grep(nics_master[w,1], cschema$name), 6]
}
head(cschema)
for (w in 1:nrow(nics_master)){
cschema[grep(nics_master[w,1], cschema$name), 3] <- nics_master[w,5]
cschema[grep(nics_master[w,1], cschema$name), 4] <- nics_master[w,6]
cschema[grep(nics_master[w,1], cschema$name), 5] <- nics_master[w,7]
cschema[grep(nics_master[w,1], cschema$name), 6] <- 100 - (nics_master[w,5] + nics_master[w,6] + nics_master[w,7])
cschema[grep(nics_master[w,1], cschema$name), 6]
}
head(cschema, 100)
nics_master
cschema[grep(nics_master[19,1], cschema$name), 6]
cschema[grep(nics_master[19,1], cschema$name), 6]
cschema[grep(nics_master[18,1], cschema$name), 6]
saveRDS(cschema, file="couties_mod.Rds")
saveRDS(cschema, file="counties_mod.rds")
setwd("C:/Users/PMB/Dropbox/data/class9project1")
shiny::runApp()
rm(schema)
shiny::runApp()
nics_master
shiny::runApp()
shiny::runApp()
library(shinyapps)
shinyapps::deployApp('path/to/your/app')
install.packages('devtools')
devtools::install_github('rstudio/shinyapps')
shinyapps::setAccountInfo(name='pburdi', token='45A8FF2AF66FCB2E7D435845E1FA44DC', secret='x3dtozJOr2BZPte7YMoMlSnk4L67q0a8csRrX5ZP')
library(shinyapps)
shinyapps::deployApp('.')
library(shinyapps)
deployApp()
setwd("C:/Users/PMB/Dropbox/data/class9project1/shinyapp")
shiny::runApp()
shiny::runApp()
shiny::runApp()
deployApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
deployApp()
deployApp()
